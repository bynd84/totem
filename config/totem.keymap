//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE   0
#define wsad   1
#define wsad2   2
#define prom_left    3
#define prom_right    4
#define dg   5
#define fk   6
#define np    7
#define nav   8
#define sym    9
#define ZMK_POINTING_DEFAULT_MOVE_VAL 1300  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15    // default: 10

&mmv {
    x-input-code = <INPUT_REL_X>;
    y-input-code = <INPUT_REL_Y>;
    time-to-max-speed-ms = <130>;
    acceleration-exponent = <2>;
};

&mt {
    quick-tap-ms = <0>;
    global-quick-tap;
    flavor = "hold-preferred";
    tapping-term-ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        qwerty_Ls_brt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <1 11>;
            layers = <0 3>;
        };

        qwerty_Rs_brt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <2 12>;
            layers = <0 3>;
        };

        wsad_toggle {
            bindings = <&tog 1>;
            key-positions = <25 21>;
            layers = <0 1>;
        };

        fkeys {
            bindings = <&sl 6>;
            key-positions = <14 13>;
            layers = <1 0 3>;
        };

        numpad {
            bindings = <&tog 7>;
            key-positions = <26 30>;
            layers = <0 7 4>;
        };

        prom_l {
            bindings = <&tog 3>;
            key-positions = <22 24>;
            layers = <0 3>;
        };

        prom_r {
            bindings = <&tog 4>;
            key-positions = <27 29>;
            layers = <0 4>;
        };

        quote {
            bindings = <&kp SQT>;
            key-positions = <3 13>;
            layers = <0 3>;
        };
    };

    behaviors {
        wasd_nums: wasd_nums {
            compatible = "zmk,behavior-hold-tap";
            label = "WASD_NUMS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <0>;
            tapping-term-ms = <250>;
            require-prior-idle-ms = <0>;
        };

        hl_mod: hl_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "HL_MOD";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        qwerty {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
                    &kp Q  &kp W        &kp E  &kp R  &kp T        &kp Y        &kp U     &kp I      &kp O          &kp P
                    &kp A  &kp S        &kp D  &kp F  &kp G        &kp H        &kp J     &kp K      &kp L          &kp SEMI
&mt LEFT_ALT GRAVE  &kp Z  &mt LCTRL X  &kp C  &kp V  &kp B        &kp N        &kp M     &kp COMMA  &mt RCTRL DOT  &kp FSLH  &mt RIGHT_ALT BSLH
                                        &none  &mo 5  &kp LSHFT    &lt 8 SPACE  &kp LBKT  &kp RBKT
            >;
        };

        wsad {
            bindings = <
              &kp TAB    &wasd_nums Q NUMBER_1  &wasd_nums X NUMBER_2  &wasd_nums E NUMBER_3  &wasd_nums R NUMBER_4    &trans  &trans  &trans  &trans  &trans
              &kp LSHFT  &kp A                  &kp W                  &kp D                  &wasd_nums F N5          &trans  &trans  &trans  &trans  &trans
&lt 5 ESCAPE  &kp LCTRL  &wasd_nums Z N8        &kp S                  &wasd_nums C N7        &wasd_nums V NUMBER_6    &trans  &trans  &trans  &trans  &trans  &trans
                                                &kp LALT               &kp SPACE              &mo 2                    &trans  &trans  &trans
            >;

            label = "wsad";
        };

        wsad2 {
            label = "wsad2";
            bindings = <
           &kp P     &kp O    &kp I      &wasd_nums U SQT  &wasd_nums Y T    &trans  &trans  &trans  &trans  &trans
           &kp SEMI  &kp L    &kp K      &kp J             &wasd_nums H G    &trans  &trans  &trans  &trans  &trans
&kp ENTER  &kp FSLH  &kp DOT  &kp COMMA  &kp M             &wasd_nums N B    &trans  &trans  &trans  &trans  &trans  &trans
                              &kp LBKT   &kp RBKT          &trans            &trans  &trans  &trans
            >;
        };

        prom_left {
            bindings = <
           &kp F  &kp P  &kp D  &kp L        &kp X        &trans  &trans  &trans  &trans  &trans
           &kp S  &kp N  &kp T  &kp H        &kp K        &trans  &trans  &trans  &trans  &trans
&kp GRAVE  &kp V  &kp W  &kp G  &kp M        &kp J        &trans  &trans  &trans  &trans  &trans  &trans
                         &kp Q  &hl_mod 5 R  &kp LSHFT    &trans  &trans  &trans
            >;

            label = "prom_left";
        };

        prom_right {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &kp SEMI         &kp U      &kp O     &kp Y      &kp B
        &trans  &trans  &trans  &trans  &trans    &kp COMMA        &kp A      &kp E     &kp I      &kp C
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS        &kp DOT    &kp Z     &kp EQUAL  &kp FSLH  &kp BSLH
                        &trans  &trans  &trans    &hl_mod 8 SPACE  &kp LCTRL  &kp LALT
            >;

            label = "prom_right";
        };

        digits {
            bindings = <
        &trans  &kp N7  &kp N8    &kp N9  &kp N0       &trans  &trans  &trans  &trans  &trans
        &trans  &kp N4  &kp N5    &kp N6  &kp MINUS    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N1  &kp N2    &kp N3  &kp EQUAL    &trans  &trans  &trans  &trans  &trans  &trans
                        &kp LGUI  &trans  &trans       &trans  &trans  &trans
            >;

            label = "dg";
        };

        Fkeys {
            bindings = <
          &kp PRINTSCREEN  &kp F7  &kp F8  &kp F9  &kp F10    &trans  &trans  &trans  &trans  &trans
          &kp SCROLLLOCK   &kp F4  &kp F5  &kp F6  &kp F11    &trans  &trans  &trans  &trans  &trans
&kp CAPS  &kp PAUSE_BREAK  &kp F1  &kp F2  &kp F3  &kp F12    &trans  &trans  &trans  &trans  &trans  &trans
                                   &trans  &trans  &trans     &trans  &trans  &trans
            >;

            label = "fk";
        };

        numpad {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &kp KP_NUMBER_0  &kp KP_N7        &kp KP_N8  &kp KP_N9  &kp KP_DIVIDE
        &trans  &trans  &trans  &trans  &trans    &kp KP_DOT       &kp KP_NUMBER_4  &kp KP_N5  &kp KP_N6  &kp KP_MULTIPLY
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_ENTER     &kp KP_N1        &kp KP_N2  &kp KP_N3  &kp KP_MINUS     &kp KP_PLUS
                        &trans  &trans  &trans    &trans           &trans           &trans
            >;

            label = "np";
        };

        nav {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &kp DEL        &kp BACKSPACE      &kp ENTER        &kp ESCAPE  &kp TAB
        &trans  &trans  &trans  &trans  &trans    &kp PG_UP      &kp LEFT           &kp UP_ARROW     &kp RIGHT   &kp LEFT_GUI
&trans  &trans  &trans  &trans  &trans  &trans    &kp PAGE_DOWN  &kp HOME           &kp DOWN_ARROW   &kp END     &kp INS       &kp INS
                        &trans  &trans  &trans    &trans         &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
