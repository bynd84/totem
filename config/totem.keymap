//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE   0
#define beakl   1
#define wsad   2
#define wsad2    3
#define wsad3    4
#define qwerty_digits    5
#define wsad_nav   6
#define fk   7
#define np    8
#define qwerty_numpad    9
#define mouse    10
#define mouse3    11
#define ZMK_POINTING_DEFAULT_MOVE_VAL 100  // default: 600

&mmv {
    time-to-max-speed-ms = <0>;
    acceleration-exponent = <0>;
};

&mt {
    quick-tap-ms = <0>;
    flavor = "tap-preferred";
    tapping-term-ms = <250>;
};

/ {
    combos {
        compatible = "zmk,combos";

        wsad_toggle {
            bindings = <&tog 2>;
            key-positions = <25 21>;
            layers = <0 2 1>;
        };

        numpad {
            bindings = <&tog 8>;
            key-positions = <6 8 7>;
            layers = <0 8 1>;
        };

        mouse {
            bindings = <&tog 10>;
            key-positions = <15 19>;
            layers = <10 0 1>;
        };

        toggle_left_nav {
            bindings = <&tog 6>;
            key-positions = <2 3 1>;
            layers = <0 6 2 1>;
        };

        st_numpad {
            bindings = <&sl 8>;
            key-positions = <6 8>;
            layers = <0 1>;
        };

        mouse3 {
            bindings = <&tog 11>;
            key-positions = <10 14>;
            layers = <0 11 2 1>;
        };

        br_l {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <17 28>;
            layers = <0 1>;
        };

        br_r {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 29>;
            layers = <0 1>;
        };

        quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <8 18>;
            layers = <0>;
        };

        st_nav {
            bindings = <&sl 6>;
            key-positions = <1 3>;
            layers = <0 2 1>;
        };

        st_fkeys {
            bindings = <&sl 7>;
            key-positions = <13 14>;
            layers = <0 2 1>;
        };

        shift1 {
            bindings = <&kp LS(NUMBER_1)>;
            key-positions = <27 16>;
            layers = <0 1>;
        };

        shift2 {
            bindings = <&kp LS(NUMBER_2)>;
            key-positions = <1 11>;
            layers = <0 1>;
        };

        shift3 {
            bindings = <&kp LS(NUMBER_3)>;
            key-positions = <2 12>;
            layers = <0 1>;
        };

        shift4 {
            bindings = <&kp LS(NUMBER_4)>;
            key-positions = <3 13>;
            layers = <0 1>;
        };

        shift5 {
            bindings = <&kp LS(N5)>;
            key-positions = <4 14>;
            layers = <0 1>;
        };

        shift6 {
            bindings = <&kp LS(NUMBER_6)>;
            key-positions = <5 15>;
            layers = <0>;
        };

        shift7 {
            bindings = <&kp LS(N7)>;
            key-positions = <6 16>;
            layers = <0 1>;
        };

        shift8 {
            bindings = <&kp LS(N8)>;
            key-positions = <7 17>;
            layers = <0 1>;
        };

        shift9 {
            bindings = <&kp LS(N9)>;
            key-positions = <22 11>;
            layers = <0 1>;
        };

        shift0 {
            bindings = <&kp LS(N0)>;
            key-positions = <12 23>;
            layers = <0 1>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <13 24>;
            layers = <0 1>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <14 25>;
            layers = <0 1>;
        };

        beakl_l {
            bindings = <&tog 1>;
            key-positions = <20 34>;
            layers = <0 1>;
        };

        beakl_r {
            bindings = <&tog 1>;
            key-positions = <35 31>;
            layers = <0 1>;
        };

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <8 18>;
            layers = <1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <3 4>;
            layers = <0 1 6>;
        };

        q_br_l {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <22 11>;
            layers = <4>;
        };

        q_br_r {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <23 12>;
            layers = <4>;
        };

        q_quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <1 11>;
            layers = <4>;
        };

        qwerty2 {
            bindings = <&sl 3>;
            key-positions = <24 25>;
            layers = <2>;
        };
    };

    behaviors {
        wasd_nums: wasd_nums {
            compatible = "zmk,behavior-hold-tap";
            label = "WASD_NUMS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <0>;
            tapping-term-ms = <250>;
            require-prior-idle-ms = <0>;
        };

        hl_mod: hl_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "HL_MOD";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <0>;
            flavor = "balanced";
        };

        layer_stlayer: layer_stlayer {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_STLAYER";
            bindings = <&mo>, <&sl>;

            #binding-cells = <2>;
            quick-tap-ms = <0>;
            tapping-term-ms = <250>;
            require-prior-idle-ms = <0>;
        };

        kp_stlayer: kp_stlayer {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_STLAYER";
            bindings = <&kp>, <&sl>;

            #binding-cells = <2>;
            quick-tap-ms = <0>;
            tapping-term-ms = <250>;
            require-prior-idle-ms = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        beakl19bis {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
                &kp Q  &kp Y     &kp O     &kp U    &kp Z        &kp W      &kp D      &kp N  &kp C  &kp K
                &kp H  &kp I     &kp E     &kp A    &kp COMMA    &kp G      &kp T      &kp R  &kp S  &kp P
&mt LALT GRAVE  &kp J  &kp APOS  &kp FSLH  &kp DOT  &kp X        &kp V      &kp M      &kp L  &kp F  &kp B  &mt RALT BACKSLASH
                                 &none     &mo 6    &kp LSHFT    &kp SPACE  &kp LCTRL  &mo 5
            >;
        };

        qwerty {
            bindings = <
                &kp Q  &kp W  &kp E  &kp R  &kp T        &kp Y      &kp U      &kp I      &kp O    &kp P
                &kp A  &kp S  &kp D  &kp F  &kp G        &kp H      &kp J      &kp K      &kp L    &kp SEMI
&mt LALT GRAVE  &kp Z  &kp X  &kp C  &kp V  &kp B        &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_ALT BSLH
                              &none  &mo 6  &kp LSHFT    &kp SPACE  &kp LCTRL  &mo 5
            >;

            label = "qwerty";
        };

        wsad {
            bindings = <
           &kp TAB    &kp N1  &kp N2  &kp N3              &kp N4       &trans  &trans  &trans  &trans  &trans
           &kp LALT   &kp A   &kp W   &kp D               &kp F        &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp LCTRL  &kp Q   &kp S   &kp E               &kp R        &trans  &trans  &trans  &trans  &trans  &trans
                              &mo 9   &layer_stlayer 6 4  &kp SPACE    &trans  &trans  &trans
            >;

            label = "wsad";
        };

        wsad2 {
            label = "wsad2";
            bindings = <
           &kp P      &kp O    &kp I      &kp U     &kp Y       &trans  &trans  &trans  &trans  &trans
           &kp RALT   &kp L    &kp K      &kp J     &kp H       &trans  &trans  &trans  &trans  &trans
&kp RSHFT  &kp RCTRL  &kp DOT  &kp COMMA  &kp M     &kp N       &trans  &trans  &trans  &trans  &trans  &trans
                               &kp SEMI   &kp FSLH  &kp BSLH    &trans  &trans  &trans
            >;
        };

        wsad3 {
            label = "wsad3";
            bindings = <
           &kp GRAVE  &kp N5  &kp N6     &kp N7  &kp T        &trans  &trans  &trans  &trans  &trans
           &kp LALT   &kp N8  &kp N9     &kp N0  &kp G        &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp LCTRL  &kp Z   &kp X      &kp C   &kp B        &trans  &trans  &trans  &trans  &trans  &trans
                              &kp MINUS  &kp V   &kp EQUAL    &trans  &trans  &trans
            >;
        };

        qwerty_digits {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans             &kp N7  &kp N8  &kp N9  &kp GRAVE
        &trans  &trans  &trans  &trans  &trans    &kp C_VOLUME_UP    &kp N4  &kp N5  &kp N6  &kp N0
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_VOLUME_DOWN  &kp N1  &kp N2  &kp N3  &trans     &kp LGUI
                        &trans  &trans  &trans    &trans             &trans  &trans
            >;

            label = "qwerty_digits";
        };

        wsad_nav {
            label = "wsad_nav";
            bindings = <
           &kp TAB    &kp HOME        &kp BSPC      &kp END          &kp PG_UP        &trans  &trans  &trans  &trans  &trans
           &kp RALT   &kp LEFT_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN    &trans  &trans  &trans  &trans  &trans
&kp RSHFT  &kp RCTRL  &kp ESC         &kp DOWN      &kp ENTER        &kp DEL          &trans  &trans  &trans  &trans  &trans  &trans
                                      &mo 7         &mo 7            &kp INS          &trans  &trans  &trans
            >;
        };

        Fkeys {
            bindings = <
          &kp LGUI           &kp F7  &kp F8     &kp F9          &kp F10            &trans  &trans  &trans  &trans  &trans
          &kp C_VOLUME_UP    &kp F4  &kp F5     &kp F6          &kp F11            &trans  &trans  &trans  &trans  &trans
&kp CAPS  &kp C_VOLUME_DOWN  &kp F1  &kp F2     &kp F3          &kp F12            &trans  &trans  &trans  &trans  &trans  &trans
                                     &kp PSCRN  &kp SCROLLLOCK  &kp PAUSE_BREAK    &trans  &trans  &trans
            >;

            label = "fk";
        };

        numpad {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &kp KP_DIVIDE    &kp KP_N7        &kp KP_N8  &kp KP_N9  &none
        &trans  &trans  &trans  &trans  &trans    &kp KP_MULTIPLY  &kp KP_NUMBER_4  &kp KP_N5  &kp KP_N6  &kp KP_NUMBER_0
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_MINUS     &kp KP_N1        &kp KP_N2  &kp KP_N3  &kp KP_PLUS      &kp KP_NUM
                        &trans  &trans  &trans    &kp KP_DOT       &kp KP_ENTER     &none
            >;

            label = "np";
        };

        qwerty_numpad {
            bindings = <
                &trans           &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_DIVIDE      &trans  &trans  &trans  &trans  &trans
                &kp KP_NUMBER_0  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MULTIPLY    &trans  &trans  &trans  &trans  &trans
&kp KP_NUMLOCK  &kp KP_PLUS      &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_MINUS       &trans  &trans  &trans  &trans  &trans  &trans
                                                  &trans           &kp KP_ENTER     &kp KP_DOT         &trans  &trans  &trans
            >;

            label = "qwerty_numpad";
        };

        mouse {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans             &mmv MOVE_X(-1400)  &mmv MOVE_Y(-1400)  &mmv MOVE_X(1400)  &trans
        &trans  &trans  &trans  &trans  &trans    &msc SCRL_UP       &mmv MOVE_LEFT      &mmv MOVE_UP        &mmv MOVE_RIGHT    &mkp LCLK
&trans  &trans  &trans  &trans  &trans  &trans    &msc SCRL_DOWN     &mkp LCLK           &mkp MCLK           &mkp RCLK          &mkp RCLK  &trans
                        &trans  &trans  &trans    &mmv MOVE_Y(1400)  &mmv MOVE_DOWN      &trans
            >;

            label = "mouse";
        };

        mouse3 {
            bindings = <
        &trans     &mmv MOVE_X(-1400)  &mmv MOVE_Y(-1400)  &mmv MOVE_X(1400)  &trans               &trans  &trans  &trans  &trans  &trans
        &mkp LCLK  &mmv MOVE_LEFT      &mmv MOVE_UP        &mmv MOVE_RIGHT    &msc SCRL_UP         &trans  &trans  &trans  &trans  &trans
&trans  &mkp RCLK  &mkp RCLK           &mkp MCLK           &mkp LCLK          &msc SCRL_DOWN       &trans  &trans  &trans  &trans  &trans  &trans
                                       &none               &mmv MOVE_DOWN     &mmv MOVE_Y(1400)    &trans  &trans  &trans
            >;

            label = "mouse3";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
