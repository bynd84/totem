//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE   0
#define wsad_letters   1
#define wsad_ld   2
#define wsad2    3
#define wsad_digits    4
#define wsad_nav   5
#define fk   6
#define np    7
#define mouse    8
#define ZMK_POINTING_DEFAULT_MOVE_VAL 300  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15    // default: 10

&mmv {
    time-to-max-speed-ms = <0>;
    acceleration-exponent = <0>;
};

&mt {
    quick-tap-ms = <0>;
    flavor = "tap-preferred";
    tapping-term-ms = <250>;
};

/ {
    combos {
        compatible = "zmk,combos";

        wsad_toggle {
            bindings = <&tog 1>;
            key-positions = <25 21>;
            layers = <0 1 2>;
        };

        numpad {
            bindings = <&tog 7>;
            key-positions = <5 9>;
            layers = <0 7>;
        };

        mouse {
            bindings = <&tog 8>;
            key-positions = <15 19>;
            layers = <8 0>;
        };

        wsad_ld {
            bindings = <&tog 2>;
            key-positions = <0 4>;
            layers = <1 2>;
        };

        toggle_left_nav {
            bindings = <&tog 5>;
            key-positions = <2 3 1>;
            layers = <0 1 5 2>;
        };

        st_numpad {
            bindings = <&sl 7>;
            key-positions = <6 8>;
            layers = <0 7>;
        };

        bs {
            bindings = <&kp BACKSPACE>;
            key-positions = <7 17>;
            layers = <0>;
        };

        ent {
            bindings = <&kp ENTER>;
            key-positions = <16 6>;
            layers = <0>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <8 18>;
            layers = <0>;
        };

        mouse3 {
            bindings = <&tog 10>;
            key-positions = <10 14>;
            layers = <0 10>;
        };

        br_l {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <28 17>;
            layers = <0>;
        };

        br_r {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 29>;
            layers = <0>;
        };

        quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <27 16>;
            layers = <0>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <5 6>;
            layers = <0>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <15 16>;
            layers = <0>;
        };

        exclimation {
            bindings = <&kp LS(NUMBER_1)>;
            key-positions = <26 27>;
            layers = <0>;
        };

        l_brace {
            bindings = <&kp LS(N9)>;
            key-positions = <22 11>;
            layers = <0 1 2>;
        };

        r_brace {
            bindings = <&kp LS(N0)>;
            key-positions = <23 12>;
            layers = <0 1 2>;
        };

        st_nav {
            bindings = <&sl 5>;
            key-positions = <3 1>;
            layers = <0 1 5 2>;
        };
    };

    behaviors {
        wasd_nums: wasd_nums {
            compatible = "zmk,behavior-hold-tap";
            label = "WASD_NUMS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <0>;
            tapping-term-ms = <250>;
            require-prior-idle-ms = <0>;
        };

        hl_mod: hl_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "HL_MOD";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <0>;
            flavor = "balanced";
        };

        layer_stlayer: layer_stlayer {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_STLAYER";
            bindings = <&mo>, <&sl>;

            #binding-cells = <2>;
            quick-tap-ms = <0>;
            tapping-term-ms = <250>;
            require-prior-idle-ms = <0>;
        };

        kp_stlayer: kp_stlayer {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_STLAYER";
            bindings = <&kp>, <&sl>;

            #binding-cells = <2>;
            quick-tap-ms = <0>;
            tapping-term-ms = <250>;
            require-prior-idle-ms = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        qwerty {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
          &kp Q  &kp W  &kp E  &kp R                &kp T        &kp Y      &kp U      &kp I      &kp O    &kp P
          &kp A  &kp S  &kp D  &kp F                &kp G        &kp H      &kp J      &kp K      &kp L    &kp SEMI
&kp LALT  &kp Z  &kp X  &kp C  &kp V                &kp B        &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp BSLH
                        &mo 5  &layer_stlayer 4 11  &kp LSHFT    &kp SPACE  &kp RCTRL  &kp RALT
            >;
        };

        wsad_letters {
            bindings = <
          &kp TAB    &kp Q  &kp X    &kp E               &kp R        &trans  &trans  &trans  &trans  &trans
          &kp LSHFT  &kp A  &kp W    &kp D               &kp F        &trans  &trans  &trans  &trans  &trans
&kp LALT  &kp LCTRL  &kp Z  &kp S    &kp C               &kp V        &trans  &trans  &trans  &trans  &trans  &trans
                            &kp ESC  &layer_stlayer 4 3  &kp SPACE    &trans  &trans  &trans
            >;

            label = "wsad_letters";
        };

        wsad_ld {
            label = "wsad_ld";
            bindings = <
          &kp TAB    &wasd_nums Q NUMBER_1  &wasd_nums X NUMBER_2  &wasd_nums E NUMBER_3  &wasd_nums R NUMBER_4    &trans  &trans  &trans  &trans  &trans
          &kp LSHFT  &kp A                  &kp W                  &kp D                  &wasd_nums F N5          &trans  &trans  &trans  &trans  &trans
&kp LALT  &kp LCTRL  &wasd_nums Z N8        &kp S                  &wasd_nums C N7        &wasd_nums V NUMBER_6    &trans  &trans  &trans  &trans  &trans  &trans
                                            &kp ESC                &layer_stlayer 4 3     &kp LCTRL                &trans  &trans  &trans
            >;
        };

        wsad2 {
            label = "wsad2";
            bindings = <
          &kp O    &kp I      &kp U     &kp Y     &kp T    &trans  &trans  &trans  &trans  &trans
          &kp L    &kp K      &kp J     &kp H     &kp G    &trans  &trans  &trans  &trans  &trans
&kp APOS  &kp DOT  &kp COMMA  &kp M     &kp N     &kp B    &trans  &trans  &trans  &trans  &trans  &trans
                              &kp FSLH  &kp SEMI  &kp P    &trans  &trans  &trans
            >;
        };

        wsad_digits {
            bindings = <
          &kp GRAVE        &kp N7  &kp N8  &kp N9  &kp N0       &trans  &trans  &trans  &trans  &trans
          &kp C_VOLUME_UP  &kp N4  &kp N5  &kp N6  &kp MINUS    &trans  &trans  &trans  &trans  &trans
&kp LGUI  &kp C_VOL_DN     &kp N1  &kp N2  &kp N3  &kp EQUAL    &trans  &trans  &trans  &trans  &trans  &trans
                                   &trans  &trans  &kp LSHFT    &trans  &trans  &trans
            >;

            label = "wsad_digits";
        };

        wsad_nav {
            label = "wsad_nav";
            bindings = <
          &kp TAB    &kp ESC         &kp BSPC      &kp ENTER        &kp DEL      &trans  &trans  &trans  &trans  &trans
          &kp LSHFT  &kp LEFT_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp PG_UP    &trans  &trans  &trans  &trans  &trans
&kp LALT  &kp LCTRL  &kp HOME        &kp DOWN      &kp END          &kp PG_DN    &trans  &trans  &trans  &trans  &trans  &trans
                                     &trans        &mo 6            &kp INS      &trans  &trans  &trans
            >;
        };

        Fkeys {
            bindings = <
        &trans  &kp F7  &kp F8  &kp F9  &kp F10    &trans  &trans  &trans  &trans  &trans
        &trans  &kp F4  &kp F5  &kp F6  &kp F11    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp F1  &kp F2  &kp F3  &kp F12    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans     &trans  &trans  &trans
            >;

            label = "fk";
        };

        numpad {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &kp KP_DOT       &kp KP_N7        &kp KP_N8  &kp KP_N9  &trans
        &trans  &trans  &trans  &trans  &trans    &kp KP_DIVIDE    &kp KP_NUMBER_4  &kp KP_N5  &kp KP_N6  &kp KP_MINUS
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_MULTIPLY  &kp KP_N1        &kp KP_N2  &kp KP_N3  &kp KP_PLUS   &kp KP_NUM
                        &trans  &trans  &trans    &kp KP_ENTER     &kp KP_N0        &trans
            >;

            label = "np";
        };

        mouse {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans             &mmv MOVE_X(-1500)  &mmv MOVE_Y(-1500)  &mmv MOVE_X(1500)  &trans
        &trans  &trans  &trans  &trans  &trans    &msc MOVE_Y(15)    &mmv MOVE_LEFT      &mmv MOVE_UP        &mmv MOVE_RIGHT    &kp C_VOLUME_UP
&trans  &trans  &trans  &trans  &trans  &trans    &msc MOVE_Y(-15)   &mkp LCLK           &mkp MCLK           &mkp RCLK          &kp C_VOL_DN     &trans
                        &trans  &trans  &trans    &mmv MOVE_Y(1500)  &mmv MOVE_DOWN      &mo 9
            >;

            label = "mouse";
        };

        mouse2 {
            label = "mouse2";
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans          &trans            &trans            &trans           &trans
        &trans  &trans  &trans  &trans  &trans    &msc SCRL_UP    &mmv MOVE_X(-50)  &mmv MOVE_Y(-50)  &mmv MOVE_X(50)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &msc SCRL_DOWN  &trans            &mmv MOVE_Y(50)   &trans           &trans  &trans
                        &trans  &trans  &trans    &trans          &trans            &trans
            >;
        };

        mouse3 {
            bindings = <
        &trans  &trans            &trans            &trans           &trans       &trans  &trans  &trans  &trans  &trans
        &trans  &mmv MOVE_X(-50)  &mmv MOVE_Y(-50)  &mmv MOVE_X(50)  &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans            &mmv MOVE_Y(50)   &trans           &trans       &trans  &trans  &trans  &trans  &trans  &trans
                                  &mkp RCLK         &mkp MCLK        &mkp LCLK    &trans  &trans  &trans
            >;

            label = "mouse3";
        };

        l_symbs {
            label = "l_symbs";
            bindings = <
        &kp LS(GRAVE)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)       &trans  &trans  &trans  &trans  &trans
        &trans         &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp LS(MINUS)    &trans  &trans  &trans  &trans  &trans
&trans  &trans         &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(EQUAL)    &trans  &trans  &trans  &trans  &trans  &trans
                                   &trans      &trans      &trans           &trans  &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
