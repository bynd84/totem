//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE   0
#define nav    1
#define fk     2
#define wsad   3
#define wsad2   4
#define dg   5
#define fmouse   6
#define np    7
#define ZMK_POINTING_DEFAULT_MOVE_VAL 1300  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15    // default: 10

&mmv {
    x-input-code = <INPUT_REL_X>;
    y-input-code = <INPUT_REL_Y>;
    time-to-max-speed-ms = <130>;
    acceleration-exponent = <2>;
};

&mt {
    quick-tap-ms = <0>;
    global-quick-tap;
    flavor = "hold-preferred";
    tapping-term-ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        qwerty_Ls_brt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <17 7>;
            layers = <0>;
        };

        qwerty_Rs_brt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <8 18>;
            layers = <0>;
        };

        qwerty_quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <6 16>;
            layers = <0>;
        };

        wsad_toggle {
            bindings = <&tog 1>;
            key-positions = <25 21>;
            layers = <0 1>;
        };

        fkeys {
            bindings = <&sl 4>;
            key-positions = <14 13>;
            layers = <1 0>;
        };

        qwerty_ent {
            bindings = <&kp ENTER>;
            key-positions = <5 6>;
            layers = <0>;
        };

        qwerty_bs {
            bindings = <&kp BSPC>;
            key-positions = <15 16>;
            layers = <0>;
        };

        numpad {
            bindings = <&tog 5>;
            key-positions = <26 30>;
            layers = <0 5>;
        };
    };

    behaviors {
        hr_mod: hr_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "HR_MOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        qwerty {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
           &kp Q               &kp W               &kp E            &kp R                 &kp T        &kp Y        &kp U                  &kp I            &kp O                &kp P
           &hr_mod LEFT_GUI A  &hr_mod LEFT_ALT S  &hr_mod LCTRL D  &hr_mod LEFT_SHIFT F  &kp G        &kp H        &hr_mod RIGHT_SHIFT J  &hr_mod RCTRL K  &hr_mod RIGHT_ALT L  &kp SEMI
&kp GRAVE  &kp Z               &kp X               &kp C            &kp V                 &kp B        &kp N        &kp M                  &kp COMMA        &kp DOT              &kp FSLH  &kp BSLH
                                                   &none            &mo 3                 &kp SPACE    &lt 7 SPACE  &mo 6                  &none
            >;
        };

        wsad {
            bindings = <
              &kp TAB    &kp Q  &kp X     &kp E      &kp R    &trans  &trans  &trans  &trans  &trans
              &kp LSHFT  &kp A  &kp W     &kp D      &kp F    &trans  &trans  &trans  &trans  &trans
&lt 2 ESCAPE  &kp LCTRL  &kp Z  &kp S     &kp C      &kp V    &trans  &trans  &trans  &trans  &trans  &trans
                                &kp LALT  &kp SPACE  &mo 3    &trans  &trans  &trans
            >;

            label = "wsad";
        };

        wsad2 {
            label = "wsad2";
            bindings = <
        &kp P     &kp O    &kp I      &kp U     &kp Y        &trans  &trans  &trans  &trans  &trans
        &kp SEMI  &kp L    &kp K      &kp J     &kp H        &trans  &trans  &trans  &trans  &trans
&trans  &kp FSLH  &kp DOT  &kp COMMA  &kp M     &kp N        &trans  &trans  &trans  &trans  &trans  &trans
                           &kp LBKT   &kp RBKT  &kp ENTER    &trans  &trans  &trans
            >;
        };

        digits {
            bindings = <
           &kp T  &kp N7  &kp N8  &kp N9  &kp N0       &trans  &trans  &trans  &trans  &trans
           &kp G  &kp N4  &kp N5  &kp N6  &kp MINUS    &trans  &trans  &trans  &trans  &trans
&kp GRAVE  &kp B  &kp N1  &kp N2  &kp N3  &kp EQUAL    &trans  &trans  &trans  &trans  &trans  &trans
                          &trans  &trans  &trans       &trans  &trans  &trans
            >;

            label = "dg";
        };

        Fkeys {
            bindings = <
          &kp PRINTSCREEN  &kp F7  &kp F8  &kp F9  &kp F10    &trans  &trans  &trans  &trans  &trans
          &kp SCROLLLOCK   &kp F4  &kp F5  &kp F6  &kp F11    &trans  &trans  &trans  &trans  &trans
&kp CAPS  &kp PAUSE_BREAK  &kp F1  &kp F2  &kp F3  &kp F12    &trans  &trans  &trans  &trans  &trans  &trans
                                   &trans  &trans  &trans     &trans  &trans  &trans
            >;

            label = "fk";
        };

        numpad {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &kp KP_NUMBER_0  &kp KP_N7        &kp KP_N8  &kp KP_N9  &kp KP_DIVIDE
        &trans  &trans  &trans  &trans  &trans    &kp KP_DOT       &kp KP_NUMBER_4  &kp KP_N5  &kp KP_N6  &kp KP_MULTIPLY
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_ENTER     &kp KP_N1        &kp KP_N2  &kp KP_N3  &kp KP_MINUS     &kp KP_PLUS
                        &trans  &trans  &trans    &trans           &trans           &trans
            >;

            label = "np";
        };

        nav {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &kp DEL        &kp BACKSPACE  &kp ENTER       &kp ESCAPE  &kp INS
        &trans  &trans  &trans  &trans  &trans    &kp PG_UP      &kp LEFT       &kp UP_ARROW    &kp RIGHT   &kp C_VOLUME_UP
&trans  &trans  &trans  &trans  &trans  &trans    &kp PAGE_DOWN  &kp HOME       &kp DOWN_ARROW  &kp END     &kp C_VOLUME_DOWN  &trans
                        &trans  &trans  &trans    &trans         &trans         &trans
            >;
        };

        sym {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &kp LS(N0)     &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &trans
        &trans  &trans  &trans  &trans  &trans    &kp LS(MINUS)  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LS(EQUAL)  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &trans  &kp LS(GRAVE)
                        &trans  &trans  &trans    &trans         &trans      &trans
            >;

            label = "sym";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
