//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define nav  1
#define dg   2
#define fk   3
#define slow_mouse   4
#define fast_mouse   5
#define ZMK_POINTING_DEFAULT_MOVE_VAL 200  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

&mmv {
    x-input-code = <INPUT_REL_X>;
    y-input-code = <INPUT_REL_Y>;
    time-to-max-speed-ms = <0>;
    acceleration-exponent = <0>;
};

&mt {
    quick-tap-ms = <150>;
    global-quick-tap;
    flavor = "hold-preferred";
    tapping-term-ms = <250>;
};

/ {
    combos {
        compatible = "zmk,combos";

        qwerty_Ls_brt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <17 7>;
            layers = <0>;
        };

        qwerty_Rs_brt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <8 18>;
            layers = <0>;
        };

        qwerty_quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <6 16>;
            layers = <0>;
        };

        exclmrk {
            bindings = <&kp EXCLAMATION>;
            key-positions = <1 11>;
            layers = <0>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <15 5>;
            layers = <0>;
        };
    };

    behaviors {
        hrmod: hrmod {
            compatible = "zmk,behavior-hold-tap";
            label = "HRMOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            flavor = "balanced";
            hold-trigger-key-positions = <13 12 11 16 17 18>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        qwerty {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
           &kp Q  &kp W              &kp E           &kp R                &kp T    &kp Y          &kp U                 &kp I           &kp O               &kp P
           &kp A  &hrmod LEFT_ALT S  &hrmod LCTRL D  &hrmod LEFT_SHIFT F  &kp G    &kp H          &hrmod RIGHT_SHIFT J  &hrmod RCTRL K  &hrmod RIGHT_ALT L  &kp SEMI
&kp GRAVE  &kp Z  &kp X              &kp C           &kp V                &kp B    &kp N          &kp M                 &kp COMMA       &kp DOT             &kp FSLH  &kp BSLH
                                     &mo 3           &mo 1                &mo 2    &kp BACKSPACE  &kp SPACE             &tog 4
            >;
        };

        Navigation {
            bindings = <
                   &kp C_VOLUME_UP  &kp ESC   &kp TAB       &kp ENTER  &kp BSPC     &trans  &trans  &trans  &trans  &trans
                   &kp DEL          &kp LEFT  &kp UP_ARROW  &kp RIGHT  &kp PG_UP    &trans  &kp A   &kp S   &kp N2  &trans
&kp C_VOLUME_DOWN  &kp INS          &kp HOME  &kp DOWN      &kp END    &kp PG_DN    &trans  &trans  &trans  &trans  &trans  &trans
                                              &mo 3         &trans     &trans       &trans  &trans  &trans
            >;

            label = "nav";
        };

        digits {
            bindings = <
        &kp GRAVE  &kp N7  &kp N8  &kp N9  &kp N0       &trans  &trans  &trans  &trans  &trans
        &trans     &kp N4  &kp N5  &kp N6  &kp MINUS    &trans  &trans  &trans  &trans  &trans
&trans  &trans     &kp N1  &kp N2  &kp N3  &kp EQUAL    &trans  &trans  &trans  &trans  &trans  &trans
                           &trans  &trans  &trans       &trans  &trans  &trans
            >;

            label = "dg";
        };

        Fkeys {
            bindings = <
        &trans  &kp F7  &kp F8  &kp F9  &kp F10    &trans  &trans  &trans  &trans  &trans
        &trans  &kp F4  &kp F5  &kp F6  &kp F11    &trans  &kp A   &kp W   &kp N3  &trans
&trans  &trans  &kp F1  &kp F2  &kp F3  &kp F12    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans     &trans  &trans  &trans
            >;

            label = "fk";
        };

        fmouse {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans          &trans              &trans              &trans             &trans
        &trans  &trans  &trans  &trans  &trans    &msc SCRL_UP    &mmv MOVE_X(-1800)  &mmv MOVE_Y(-1800)  &mmv MOVE_X(1800)  &mkp MB3
&trans  &trans  &trans  &trans  &trans  &trans    &msc SCRL_DOWN  &mkp MB1            &mmv MOVE_Y(1800)   &mkp MB2           &none     &trans
                        &trans  &trans  &trans    &trans          &mo 5               &tog 4
            >;

            label = "fmouse";
        };

        smouse {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans          &trans          &trans          &trans           &trans
        &trans  &trans  &trans  &trans  &trans    &msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_UP    &mmv MOVE_RIGHT  &mkp MB3
&trans  &trans  &trans  &trans  &trans  &trans    &msc SCRL_DOWN  &mkp MB1        &mmv MOVE_DOWN  &mkp MB2         &mkp MB3  &trans
                        &trans  &trans  &trans    &trans          &trans          &trans
            >;

            label = "smouse";
        };

        wsad {
            bindings = <
        &kp TAB    &kp N1  &kp N2    &kp N3     &kp R     &trans  &trans  &trans  &trans  &trans
        &kp LSHFT  &kp S   &kp W     &kp D      &kp F     &trans  &trans  &trans  &trans  &trans
&trans  &kp LCTRL  &kp Q   &kp A     &kp E      &kp V     &trans  &trans  &trans  &trans  &trans  &trans
                           &kp LALT  &kp SPACE  &trans    &trans  &trans  &trans
            >;

            label = "wsad";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
