//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE   0
#define wsad_letters   1
#define wsad_ld   2
#define wsad2    3
#define wsad_digits    4
#define wsad_nav   5
#define fk   6
#define np    7
#define r_nav   8
#define mouse    9
#define ZMK_POINTING_DEFAULT_MOVE_VAL 1300  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15    // default: 10

&mmv {
    x-input-code = <INPUT_REL_X>;
    y-input-code = <INPUT_REL_Y>;
    time-to-max-speed-ms = <110>;
    acceleration-exponent = <1>;
};

&mt {
    quick-tap-ms = <0>;
    flavor = "balanced";
    tapping-term-ms = <250>;
};

/ {
    combos {
        compatible = "zmk,combos";

        wsad_toggle {
            bindings = <&tog 1>;
            key-positions = <25 21>;
            layers = <0 1>;
        };

        fkeys {
            bindings = <&sl 6>;
            key-positions = <14 13>;
            layers = <1 0 2>;
        };

        numpad {
            bindings = <&tog 7>;
            key-positions = <26 30>;
            layers = <0 7 9>;
        };

        sticky_left_nav {
            bindings = <&sl 5>;
            key-positions = <22 24>;
            layers = <1 5 2>;
        };

        mouse {
            bindings = <&tog 9>;
            key-positions = <27 29>;
            layers = <7 9 0>;
        };

        wsad_ld {
            bindings = <&tog 2>;
            key-positions = <0 4>;
            layers = <1 2 0>;
        };

        toggle_left_nav {
            bindings = <&tog 5>;
            key-positions = <22 24 23>;
            layers = <0 1 5 2>;
        };
    };

    behaviors {
        wasd_nums: wasd_nums {
            compatible = "zmk,behavior-hold-tap";
            label = "WASD_NUMS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <0>;
            tapping-term-ms = <250>;
            require-prior-idle-ms = <0>;
        };

        hl_mod: hl_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "HL_MOD";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <0>;
            flavor = "tap-preferred";
        };

        layer_stlayer: layer_stlayer {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_STLAYER";
            bindings = <&mo>, <&sl>;

            #binding-cells = <2>;
            quick-tap-ms = <0>;
            tapping-term-ms = <250>;
            require-prior-idle-ms = <0>;
        };

        kp_stlayer: kp_stlayer {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_STLAYER";
            bindings = <&kp>, <&sl>;

            #binding-cells = <2>;
            quick-tap-ms = <0>;
            tapping-term-ms = <250>;
            require-prior-idle-ms = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        qwerty {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
                    &kp Q  &kp W        &kp E     &kp R      &kp T        &kp Y      &kp U               &kp I      &kp O          &kp P
                    &kp A  &kp S        &kp D     &kp F      &kp G        &kp H      &kp J               &kp K      &kp L          &kp SEMI
&mt LEFT_ALT GRAVE  &kp Z  &mt LCTRL X  &kp C     &kp V      &kp B        &kp N      &kp M               &kp COMMA  &mt RCTRL DOT  &kp FSLH  &mt RIGHT_ALT BSLH
                                        &kp LGUI  &lt 4 SQT  &kp LSHFT    &kp SPACE  &lt 8 LEFT_BRACKET  &kp RBKT
            >;
        };

        wsad_letters {
            bindings = <
         &kp TAB    &kp Q  &kp X     &kp E      &kp R                 &trans  &trans  &trans  &trans  &trans
         &kp LSHFT  &kp A  &kp W     &kp D      &kp F                 &trans  &trans  &trans  &trans  &trans
&kp ESC  &kp LCTRL  &kp Z  &kp S     &kp C      &kp V                 &trans  &trans  &trans  &trans  &trans  &trans
                           &kp LALT  &kp SPACE  &layer_stlayer 4 3    &trans  &trans  &trans
            >;

            label = "wsad_letters";
        };

        wsad_ld {
            label = "wsad_ld";
            bindings = <
         &kp TAB    &wasd_nums Q NUMBER_1  &wasd_nums X NUMBER_2  &wasd_nums E NUMBER_3  &wasd_nums R NUMBER_4    &trans  &trans  &trans  &trans  &trans
         &kp LSHFT  &kp A                  &kp W                  &kp D                  &wasd_nums F N5          &trans  &trans  &trans  &trans  &trans
&kp ESC  &kp LCTRL  &wasd_nums Z N8        &kp S                  &wasd_nums C N7        &wasd_nums V NUMBER_6    &trans  &trans  &trans  &trans  &trans  &trans
                                           &kp LALT               &kp SPACE              &layer_stlayer 4 3       &trans  &trans  &trans
            >;
        };

        wsad2 {
            label = "wsad2";
            bindings = <
       &kp O     &kp I      &kp U     &kp Y    &kp T    &trans  &trans  &trans  &trans  &trans
       &kp LBKT  &kp K      &kp J     &kp H    &kp G    &trans  &trans  &trans  &trans  &trans
&kp L  &kp RBKT  &kp COMMA  &kp M     &kp N    &kp B    &trans  &trans  &trans  &trans  &trans  &trans
                            &kp APOS  &kp DOT  &kp P    &trans  &trans  &trans
            >;
        };

        wsad_digits {
            bindings = <
           &kp FSLH  &kp N7  &kp N8  &kp N9    &kp N0       &trans  &trans  &trans  &trans  &trans
           &trans    &kp N4  &kp N5  &kp N6    &kp MINUS    &trans  &trans  &trans  &trans  &trans
&kp GRAVE  &trans    &kp N1  &kp N2  &kp N3    &kp EQUAL    &trans  &trans  &trans  &trans  &trans  &trans
                             &none   &kp BSLH  &none        &trans  &trans  &trans
            >;

            label = "wsad_digits";
        };

        wsad_nav {
            label = "wsad_nav";
            bindings = <
          &kp TAB    &kp ESC         &kp ENTER     &kp BSPC         &kp DEL      &trans  &trans  &trans  &trans  &trans
          &kp LSHFT  &kp LEFT_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp PG_UP    &trans  &trans  &trans  &trans  &trans
&kp LGUI  &kp LCTRL  &kp HOME        &kp DOWN      &kp END          &kp PG_DN    &trans  &trans  &trans  &trans  &trans  &trans
                                     &kp LALT      &mo 6            &kp INS      &trans  &trans  &trans
            >;
        };

        Fkeys {
            bindings = <
          &kp FSLH  &kp F7  &kp F8  &kp F9  &kp F10    &trans  &trans  &trans  &trans  &trans
          &trans    &kp F4  &kp F5  &kp F6  &kp F11    &trans  &trans  &trans  &trans  &trans
&kp BSLH  &trans    &kp F1  &kp F2  &kp F3  &kp F12    &trans  &trans  &trans  &trans  &trans  &trans
                            &trans  &trans  &trans     &trans  &trans  &trans
            >;

            label = "fk";
        };

        numpad {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &kp KP_NUMBER_0  &kp KP_N7        &kp KP_N8       &kp KP_N9  &kp KP_DIVIDE
        &trans  &trans  &trans  &trans  &trans    &kp KP_DOT       &kp KP_NUMBER_4  &kp KP_N5       &kp KP_N6  &kp KP_MULTIPLY
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_ENTER     &kp KP_N1        &kp KP_N2       &kp KP_N3  &kp KP_MINUS     &kp KP_PLUS
                        &trans  &trans  &trans    &trans           &trans           &kp KP_NUMLOCK
            >;

            label = "np";
        };

        r_nav {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &kp DEL        &kp BACKSPACE  &kp ENTER       &kp ESCAPE  &kp TAB
        &trans  &trans  &trans  &trans  &trans    &kp PG_UP      &kp LEFT       &kp UP_ARROW    &kp RIGHT   &kp C_VOLUME_UP
&trans  &trans  &trans  &trans  &trans  &trans    &kp PAGE_DOWN  &kp HOME       &kp DOWN_ARROW  &kp END     &kp C_VOLUME_DOWN  &kp INS
                        &trans  &trans  &trans    &trans         &trans         &kp RGUI
            >;

            label = "r_nav";
        };

        mouse {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans          &trans          &trans          &trans           &trans
        &trans  &trans  &trans  &trans  &trans    &msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_UP    &mmv MOVE_RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &msc SCRL_DOWN  &mkp MCLK       &mmv MOVE_DOWN  &mkp RCLK        &trans  &trans
                        &trans  &trans  &trans    &mkp LCLK       &trans          &trans
            >;

            label = "mouse";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
